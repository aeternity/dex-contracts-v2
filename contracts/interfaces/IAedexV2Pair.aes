@compiler >= 6

include "./IAedexV2Callee.aes"
include "./IAEX9Minimal.aes"

contract interface IAedexV2Pair =
    entrypoint domain_separator: () => bytes(32)
    entrypoint permit_typehash: () => bytes(32)
    entrypoint nonces: (address /*owner*/) => int

    entrypoint permit: (
          address /*owner*/
        , address /*spender*/
        , int /*value*/
        , int /*deadline*/
        , int /*v*/
        , bytes(32) /*r*/
        , bytes(32) /*s*/
        ) => unit


    entrypoint minimum_liquidity: () => int
    entrypoint factory: () => address //TODO: IAedexV2Factory ??
    entrypoint token0: () => IAEX9Minimal  
    entrypoint token1: () => IAEX9Minimal  

    record reserves = { reserve0: int , reserve1: int, blockTimestampLast: int }
    entrypoint getReserves: () => reserves
    entrypoint price0_cumulativeLast: () => int
    entrypoint price1_cumulativeLast: () => int
    entrypoint k_last: () => int

    entrypoint mint: (address /*to*/) => int /*liquidity*/
    record amounts =  { amount0: int,amount1: int }
    entrypoint burn: (address /*to*/) => amounts 

    entrypoint swap: (int /*amount0Out*/, int /*amount1Out*/, address /*to*/, option(IAedexV2Callee) /*calle*/) => int

    entrypoint skim: (IAEX9Minimal /*to*/) => unit
    entrypoint sync: () => unit

    entrypoint initialize: (IAEX9Minimal, IAEX9Minimal) => unit
